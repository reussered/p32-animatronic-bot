// Dynamic GPIO Driver - Runtime Pin Assignment Example
// This component demonstrates the new assigned_pins array system
// init() assigns a pin dynamically, act() uses the assigned pin

#include "esp_log.h"
#include "driver/gpio.h"
#include "esp32_s3_devkit_pin_assignments.h"  // Include the pin assignments header

static const char *TAG_dynamic_gpio_driver = "dynamic_gpio_driver";

// Static variable to store the assigned pin (assigned during init, used during act)
static int assigned_pin = -1;

// Static variable to track the current state
static int current_state = 0;

esp_err_t dynamic_gpio_driver_init(void) {
    ESP_LOGI(TAG_dynamic_gpio_driver, "Dynamic GPIO driver init - assigning pin at runtime");

    // Assign a GPIO pin dynamically from the assignable array
    assigned_pin = assign_pin(gpio_assignable, gpio_assignable_count);

    if (assigned_pin == -1) {
        ESP_LOGE(TAG_dynamic_gpio_driver, "Failed to assign GPIO pin - no available pins!");
        return ESP_FAIL;
    }

    ESP_LOGI(TAG_dynamic_gpio_driver, "Assigned GPIO pin: %d", assigned_pin);

    // Configure the assigned pin as output
    gpio_config_t io_conf = {
        .pin_bit_mask = (1ULL << assigned_pin),
        .mode = GPIO_MODE_OUTPUT,
        .pull_up_en = GPIO_PULLUP_DISABLE,
        .pull_down_en = GPIO_PULLDOWN_DISABLE,
        .intr_type = GPIO_INTR_DISABLE
    };

    esp_err_t ret = gpio_config(&io_conf);
    if (ret != ESP_OK) {
        ESP_LOGE(TAG_dynamic_gpio_driver, "Failed to configure GPIO pin %d", assigned_pin);
        return ret;
    }

    // Set initial state to LOW
    gpio_set_level((gpio_num_t)assigned_pin, 0);
    current_state = 0;

    ESP_LOGI(TAG_dynamic_gpio_driver, "Dynamic GPIO driver initialized successfully on pin %d", assigned_pin);
    return ESP_OK;
}

void dynamic_gpio_driver_act(void) {
    // Toggle the LED state using the pin assigned during init
    if (assigned_pin != -1) {
        current_state = !current_state;
        gpio_set_level((gpio_num_t)assigned_pin, current_state);

        ESP_LOGD(TAG_dynamic_gpio_driver, "GPIO pin %d set to %s", assigned_pin, current_state ? "HIGH" : "LOW");
    } else {
        ESP_LOGW(TAG_dynamic_gpio_driver, "No pin assigned - init() was not called or failed");
    }
}



